
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import testBase.TestBase;

/**
 * @author Da Novenos
 *
 */


public class MouseHelper {

	/**
	 * ... To run a bat file using Selenium and double click function ....
	 * 
	 * FindBy (By.xpath("element locator (.bat file location path)")) WebElement
	 * LocatedElement;
	 */

	TestBase tBase = new TestBase();
	public static WebDriver driver;

	// ... { Mouse effect } ...
	public Actions mouseEffect() {
		return new Actions(driver);
	}

	public void mouseOver(WebElement element) {

		TestBase.log("doing mouse over on : " + element);
		mouseEffect().moveToElement(element).build().perform();
		// mouseEffect().moveToElement(element).perform();
	}

	// Locate the element (non POM)
	public void mouseOver(String element) {

		TestBase.log("doing mouse over on : " + element);
		mouseEffect().moveToElement(tBase.getElement(element)).build().perform();
		// mouseEffect().moveToElement(tBase.getElement(element)).perform();
	}

	// Double click using POM
	public void doubleClick(WebElement element) {

		TestBase.log("Double clicking on : " + element);
		mouseEffect().moveToElement(element).doubleClick().build().perform();
	}

	// Double click (non POM)

	public void doubleClick(String element) {

		TestBase.log("Double clicking on : " + element);
		Actions action = new Actions(driver);
		action.moveToElement(tBase.getElement(element)).doubleClick().build().perform();
	}

	// Right click using POM
	public void rightClick(WebElement element) {

		TestBase.log("Right clicking on :" + element);
		// mouseEffect().contextClick(element).perform();
		mouseEffect().contextClick(element).build().perform();
	}

	// Right click (non POM)
	public void rightClick(String element) {

		TestBase.log("Right clicking on :" + element);
		// mouseEffect().contextClick(tBase.getElement(element)).perform();
		mouseEffect().contextClick(tBase.getElement(element)).build().perform();
	}

	// Drag And Drop (non POM)
	public void dragAndDrop(String from, String to) {

		TestBase.log("Drag and dropping element from one place to another");
		Action dragAndDrop = mouseEffect().clickAndHold(tBase.getElement(from)).moveToElement(tBase.getElement(to))
				.release(tBase.getElement(to)).build();
		dragAndDrop.perform();
	}

	// Drag And Drop (non POM)
	public void dragAndDrop(WebElement from, WebElement to) {

		TestBase.log("Drag and dropping element from one place to another");
		Action dragAndDrop = mouseEffect().clickAndHold(from).moveToElement(to).release(to).build();
		dragAndDrop.perform();
	}
}
